# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  ms-tenants

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  ApiGatewayID:
    Description: The name of the API Gateway to which this Api will be deployed
    Type: String
    AllowedPattern: .+
  IsProduction:
    Description: Whether this is a production stack
    Default: false
    Type: String
    AllowedValues: [true, false]
  AuthTenantUpdate:
    Description: Authorizer for Update Tenant
    Default: false
    Type: String
  TenantEventsTopic:
    Type: String
    AllowedPattern: .+

Conditions:
  HasTenantUpdateAuth: !Not [!Equals [!Ref AuthTenantUpdate, "false"]]
  IsProduction: !Equals [!Ref IsProduction, "true"]

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
  listTenantsRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ApiGatewayID
      RouteKey: GET /tenants
      AuthorizationType: None
      OperationName: listTenantsRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref listTenantsIntegration
  listTenantsIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      PayloadFormatVersion: '2.0'
      ApiId: !Ref ApiGatewayID
      Description: Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub:
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${listTenantsFunction.Arn}/invocations
  listTenantsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/handlers/
      Handler: listTenants.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 5
      Description: Lists the tenants
      Policies:
        # Give Create/Read/Update/Delete Permissions to the TenantTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TenantTable
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
          # Make table name accessible as environment variable from function code during execution
          TENANT_TABLE: !Ref TenantTable
  listTenantsPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref listTenantsFunction
      Principal: apigateway.amazonaws.com

  getTenantRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ApiGatewayID
      RouteKey: GET /tenants/{tenantUuid}
      AuthorizationType: NONE
      OperationName: getTenantRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref getTenantIntegration
  getTenantIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      PayloadFormatVersion: '2.0'
      ApiId: !Ref ApiGatewayID
      Description: Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub:
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${getTenantFunction.Arn}/invocations
  getTenantFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/handlers/
      Handler: getTenant.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 5
      Description: Gets the specified tenant
      Policies:
        # Give Create/Read/Update/Delete Permissions to the TenantTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TenantTable
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
          # Make table name accessible as environment variable from function code during execution
          TENANT_TABLE: !Ref TenantTable
  getTenantPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref getTenantFunction
      Principal: apigateway.amazonaws.com

  updateTenantRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ApiGatewayID
      RouteKey: PATCH /tenants/{tenantUuid}
      AuthorizationType: !If [HasTenantUpdateAuth, JWT, None]
      AuthorizerId: !If [HasTenantUpdateAuth, !Ref AuthTenantUpdate, !Ref AWS::NoValue]
      OperationName: updateTenantRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref updateTenantIntegration
  updateTenantIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      PayloadFormatVersion: '2.0'
      ApiId: !Ref ApiGatewayID
      Description: Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub:
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${updateTenantFunction.Arn}/invocations
  updateTenantFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/handlers/
      Handler: updateTenant.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 5
      Description: Lists the default content keys and values for the specified namespace
      Policies:
        # Give Create/Read/Update/Delete Permissions to the TenantTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TenantTable
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
          # Make table name accessible as environment variable from function code during execution
          TENANT_TABLE: !Ref TenantTable
  updateTenantPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref updateTenantFunction
      Principal: apigateway.amazonaws.com

  createTenantRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ApiGatewayID
      RouteKey: POST /tenants/
      AuthorizationType: None
      OperationName: createTenantRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref createTenantIntegration
  createTenantIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      PayloadFormatVersion: '2.0'
      ApiId: !Ref ApiGatewayID
      Description: Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub:
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${createTenantFunction.Arn}/invocations
  createTenantFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/handlers/
      Handler: createTenant.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 5
      Description: Creates a tenant
      Policies:
        # Give Create/Read/Update/Delete Permissions to the TenantTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TenantTable
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
          # Make table name accessible as environment variable from function code during execution
          SNS_TOPIC: !Ref TenantEventsTopic
          TENANT_TABLE: !Ref TenantTable
  createTenantPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref createTenantFunction
      Principal: apigateway.amazonaws.com

  TenantTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "uuid"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "uuid"
          KeyType: "HASH"
      BillingMode: PAY_PER_REQUEST
      TableName: !Join ["-", [!Ref "AWS::StackName", "tenant-table"]]
